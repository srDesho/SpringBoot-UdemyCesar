<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.cristianml</groupId>
	<artifactId>Curso_1</artifactId>
	<version>1.0.0</version>
	<name>Curso_1</name>
	<description>Creando nuestro primer Proyecto Spring</description>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Implementamos spring devtools para que el Boot dashboard compile automáticamente.-->
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-devtools</artifactId>
	        <scope>runtime</scope>
	        <optional>true</optional>
		</dependency>
		
		<!-- Thymeleaf -->
		<dependency>
  			<groupId>org.springframework.boot</groupId>
  			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!-- //Thymeleaf -->
		
		<!-- Validaciones -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!-- //Validaciones -->
		
		<!-- enviar email -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<!-- //enviar email -->
		
		<!-- código qr -->
		<dependency>
		    <groupId>com.google.zxing</groupId>
		    <artifactId>core</artifactId>
		    <version>3.4.1</version>
		</dependency>
				<dependency>
		    <groupId>com.google.zxing</groupId>
		    <artifactId>javase</artifactId>
		    <version>3.4.1</version>
		</dependency>
		<!-- // código qr -->
		
		<!-- jpa repository mysql -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <scope>runtime</scope>
		</dependency>
		<!-- Al agregar estas dependencias el proyecto se rompera, asi que es bueno darle la sgte solucion -->
		<!-- Debemos indicar los datos de conexion que vamos a trabajar en el proyecto, creamos el datasource -->
		<!-- en application.properties, debemos conectarnos a una base de datos de cualquier servicio: -->
		
		<!-- spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
		spring.datasource.url=jdbc:mysql://localhost:3306/nombreDeNuestraDB
		spring.datasource.username=root
		# password, si está vacío no ponemos nada
		spring.datasource.password=
		# agregamos esto para evitar algunos warnings
		spring.jpa.generate-ddl=false
		# configuramos el dialecto con el cual se va a construir las consultas
		spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
		# si esta en true, las consultas aparecen abajo en consola
		spring.jpa.show-sql=true
		# formato de comunicacion con hibernate, es la estrategia de la implementacion
		spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl -->
		
		<!-- // jpa repository mysql -->
		
		<!-- pdf-->
		<dependency>
		    <groupId>com.itextpdf</groupId>
		    <artifactId>kernel</artifactId>
		    <version>7.1.12</version>
		</dependency>

		<dependency>
		    <groupId>com.itextpdf</groupId>
		    <artifactId>html2pdf</artifactId>
		    <version>3.0.1</version>
		</dependency>
		<!-- // pdf-->
		
		<!-- reporte excel con apache poi -->
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml</artifactId>
		    <version>5.2.3</version>
		</dependency>
		<!-- // reporte excel con apache poi -->
		
		<!-- reporte CSV con Super CSV Core -->
		<!-- Recomendable si tengo muchos datos que hacer reportes, mejor lo hago en formato CSV-->
		<dependency>
		    <groupId>net.sf.supercsv</groupId>
		    <artifactId>super-csv</artifactId>
		    <version>2.4.0</version>
		</dependency>
		<!-- // reporte CSV con Super CSV Core -->


		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
